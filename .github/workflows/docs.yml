name: Deploy Mintlify Docs

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'src/**'
      - 'noxfile.py'
      - '.github/workflows/docs.yml'
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'production'
        type: choice
        options:
          - production
          - staging

jobs:
  deploy:
    name: Deploy to Mintlify
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: |
            **/pyproject.toml
            **/requirements*.txt

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: 'docs/package.json'

      # Cache npm dependencies
      - name: Cache npm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install nox

      - name: Generate API documentation and build docs
        run: |
          python -m nox -s docs-api

      - name: Install Mintlify CLI
        run: npm install -g mintlify@latest

      - name: Install dependencies
        run: |
          cd docs
          if [ -f "package.json" ]; then
            npm install
          fi

      - name: Debug Mintlify Version
        run: |
          mintlify --version
          cd docs
          ls -la
          cat package.json

      - name: Deploy to Mintlify
        run: |
          cd docs
          mintlify deploy
        env:
          MINTLIFY_API_KEY: ${{ secrets.MINTLIFY_API_KEY }}

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const { owner, repo, number } = context.issue;
            github.rest.issues.createComment({
              owner,
              repo,
              issue_number: number,
              body: 'ðŸ“š Documentation has been deployed to Mintlify! You can preview it at https://shotgrid-mcp-server.mintlify.app'
            });
